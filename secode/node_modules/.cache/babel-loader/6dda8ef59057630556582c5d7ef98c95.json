{"ast":null,"code":"var _jsxFileName = \"/Users/sehwan/secode/group_meal_front/src/Pages/Cell/Cell.js\";\nimport React, { Component } from \"react\";\nimport Modal from \"./Modal\";\nimport Nav from \"Components/Nav\";\nimport Tables from \"Components/Tables\";\nimport Title from \"Components/Title\";\nimport CreateButton from \"Components/CreateButton\";\nimport \"./Cell.scss\";\nimport config from \"config.js\";\n\nclass Cell extends Component {\n  constructor() {\n    super();\n\n    this.handleKeypress = e => {\n      e.keyCode === 13 && this.handleConfirm();\n    };\n\n    this.fetchCells = async () => {\n      const access_token = sessionStorage.getItem(\"access_token\");\n      const response = await fetch(\"\".concat(config.url, \"cell\"), {\n        headers: {\n          authorization: access_token\n        }\n      }).then(res => res.json());\n      const cells = response.map(res => {\n        return res;\n      });\n      this.setState({\n        cells\n      });\n    };\n\n    this.handleClick = cell => {\n      this.setState({\n        modalOn: true,\n        inputVal: cell,\n        selectedCell: cell\n      });\n    };\n\n    this.cancelInput = e => {\n      e.target.contains(this.page.current) && this.setState({\n        modalOn: false,\n        inputVal: \"\"\n      });\n    };\n\n    this.cancelModal = () => {\n      this.setState({\n        modalOn: false,\n        inputVal: \"\",\n        createMode: false\n      });\n    };\n\n    this.handleChange = e => {\n      const val = e.target.value;\n      this.setState({\n        inputVal: val\n      });\n    };\n\n    this.getCellId = cellName => {\n      const cells = this.state.cells;\n      let cellId = \"\";\n      cells.forEach(cell => {\n        if (cell.name === cellName) {\n          cellId = cell._id;\n        }\n      });\n      return cellId;\n    };\n\n    this.handleConfirm = async () => {\n      const _this$state = this.state,\n            selectedCell = _this$state.selectedCell,\n            inputVal = _this$state.inputVal;\n      const cellId = this.getCellId(selectedCell);\n      const url = config.url + \"cell/\" + cellId;\n      const access_token = sessionStorage.getItem(\"access_token\");\n      fetch(url, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          authorization: access_token\n        },\n        body: JSON.stringify({\n          name: inputVal\n        })\n      }).then(res => window.location.reload());\n    };\n\n    this.deleteCell = () => {\n      const inputVal = this.state.inputVal;\n      const cellId = this.getCellId(inputVal);\n      const url = config.url + \"cell/\" + cellId;\n      const access_token = sessionStorage.getItem(\"access_token\");\n      fetch(url, {\n        method: \"DELETE\",\n        headers: {\n          authorization: access_token\n        }\n      }).then(res => window.location.reload());\n    };\n\n    this.handleClickTool = () => {\n      this.setState({\n        modalOn: true,\n        createMode: true\n      });\n    };\n\n    this.createCell = () => {\n      const inputVal = this.state.inputVal;\n      const url = config.url + \"cell\";\n      fetch(url, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: inputVal\n        })\n      }).then(res => window.location.reload());\n    };\n\n    this.state = {\n      cells: [],\n      modalOn: false,\n      createMode: false,\n      inputVal: \"\",\n      selectedCell: \"\"\n    };\n    this.page = React.createRef();\n  }\n\n  componentDidMount() {\n    this.fetchCells();\n    window.addEventListener(\"keypress\", this.handleKeypress);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keypress\", this.handleKeypress);\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          cells = _this$state2.cells,\n          inputVal = _this$state2.inputVal,\n          modalOn = _this$state2.modalOn,\n          createMode = _this$state2.createMode;\n    return React.createElement(React.Fragment, null, React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"page\",\n      ref: this.page,\n      onClick: this.cancelInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Title, {\n      title: \"\\uC140 \\uAD00\\uB9AC\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(CreateButton, {\n      text: \"\\uC140 \\uCD94\\uAC00\",\n      onClick: this.handleClickTool,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"tables\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Tables, {\n      onClick: this.handleClick,\n      listData: cells.map(cell => cell.name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }))), modalOn && React.createElement(\"div\", {\n      className: \"background\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      createCell: this.createCell,\n      createMode: createMode,\n      handleChange: this.handleChange,\n      inputVal: inputVal,\n      handleConfirm: this.handleConfirm,\n      deleteCell: this.deleteCell,\n      cancelModal: this.cancelModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Cell;","map":{"version":3,"sources":["/Users/sehwan/secode/group_meal_front/src/Pages/Cell/Cell.js"],"names":["React","Component","Modal","Nav","Tables","Title","CreateButton","config","Cell","constructor","handleKeypress","e","keyCode","handleConfirm","fetchCells","access_token","sessionStorage","getItem","response","fetch","url","headers","authorization","then","res","json","cells","map","setState","handleClick","cell","modalOn","inputVal","selectedCell","cancelInput","target","contains","page","current","cancelModal","createMode","handleChange","val","value","getCellId","cellName","state","cellId","forEach","name","_id","method","Accept","body","JSON","stringify","window","location","reload","deleteCell","handleClickTool","createCell","createRef","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Modal from \"./Modal\";\nimport Nav from \"Components/Nav\";\nimport Tables from \"Components/Tables\";\nimport Title from \"Components/Title\";\nimport CreateButton from \"Components/CreateButton\";\nimport \"./Cell.scss\";\nimport config from \"config.js\";\n\nclass Cell extends Component {\n  constructor() {\n    super();\n    this.state = {\n      cells: [],\n      modalOn: false,\n      createMode: false,\n      inputVal: \"\",\n      selectedCell: \"\"\n    };\n\n    this.page = React.createRef();\n  }\n\n  componentDidMount() {\n    this.fetchCells();\n    window.addEventListener(\"keypress\", this.handleKeypress);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keypress\", this.handleKeypress);\n  }\n\n  handleKeypress = e => {\n    e.keyCode === 13 && this.handleConfirm();\n  };\n\n  fetchCells = async () => {\n    const access_token = sessionStorage.getItem(\"access_token\");\n    const response = await fetch(`${config.url}cell`, {\n      headers: { authorization: access_token }\n    }).then(res => res.json());\n\n    const cells = response.map(res => {\n      return res;\n    });\n\n    this.setState({ cells });\n  };\n\n  handleClick = cell => {\n    this.setState({ modalOn: true, inputVal: cell, selectedCell: cell });\n  };\n\n  cancelInput = e => {\n    e.target.contains(this.page.current) &&\n      this.setState({ modalOn: false, inputVal: \"\" });\n  };\n\n  cancelModal = () => {\n    this.setState({ modalOn: false, inputVal: \"\", createMode: false });\n  };\n\n  handleChange = e => {\n    const val = e.target.value;\n\n    this.setState({ inputVal: val });\n  };\n\n  getCellId = cellName => {\n    const { cells } = this.state;\n\n    let cellId = \"\";\n\n    cells.forEach(cell => {\n      if (cell.name === cellName) {\n        cellId = cell._id;\n      }\n    });\n\n    return cellId;\n  };\n\n  handleConfirm = async () => {\n    const { selectedCell, inputVal } = this.state;\n    const cellId = this.getCellId(selectedCell);\n    const url = config.url + \"cell/\" + cellId;\n    const access_token = sessionStorage.getItem(\"access_token\");\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        authorization: access_token\n      },\n      body: JSON.stringify({ name: inputVal })\n    }).then(res => window.location.reload());\n  };\n\n  deleteCell = () => {\n    const { inputVal } = this.state;\n    const cellId = this.getCellId(inputVal);\n    const url = config.url + \"cell/\" + cellId;\n    const access_token = sessionStorage.getItem(\"access_token\");\n\n    fetch(url, {\n      method: \"DELETE\",\n      headers: {\n        authorization: access_token\n      }\n    }).then(res => window.location.reload());\n  };\n\n  handleClickTool = () => {\n    this.setState({ modalOn: true, createMode: true });\n  };\n\n  createCell = () => {\n    const { inputVal } = this.state;\n    const url = config.url + \"cell\";\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({ name: inputVal })\n    }).then(res => window.location.reload());\n  };\n\n  render() {\n    const { cells, inputVal, modalOn, createMode } = this.state;\n\n    return (\n      <>\n        <Nav />\n        <div className=\"page\" ref={this.page} onClick={this.cancelInput}>\n          <main>\n            <Title title=\"셀 관리\" />\n            <CreateButton text=\"셀 추가\" onClick={this.handleClickTool} />\n            <div className=\"tables\">\n              <Tables\n                onClick={this.handleClick}\n                listData={cells.map(cell => cell.name)}\n              />\n            </div>\n          </main>\n          {modalOn && (\n            <div className=\"background\">\n              <Modal\n                createCell={this.createCell}\n                createMode={createMode}\n                handleChange={this.handleChange}\n                inputVal={inputVal}\n                handleConfirm={this.handleConfirm}\n                deleteCell={this.deleteCell}\n                cancelModal={this.cancelModal}\n              />\n            </div>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Cell;\n"]},"metadata":{},"sourceType":"module"}