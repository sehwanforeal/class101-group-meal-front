{"ast":null,"code":"var _jsxFileName = \"/Users/yungchoyou/Desktop/group_meal_front/secode/group_meal_front/src/Pages/EmployeeTable/Modal.js\";\nimport React, { Component } from \"react\";\n\nclass Modal extends Component {\n  constructor(props) {\n    super();\n\n    this.handleClickConfirm = async () => {\n      const _this$state = this.state,\n            _id = _this$state._id,\n            nickName = _this$state.nickName,\n            cell = _this$state.cell,\n            enrolledIn = _this$state.enrolledIn,\n            cells = _this$state.cells;\n      let cellVerification = true;\n      cells.forEach(cellData => {\n        if (cellData.name !== cell) {\n          console.log(cell, cellData.name);\n          cellVerification = false;\n        }\n      });\n      const data = JSON.stringify({\n        nickName,\n        cell,\n        enrolledIn\n      });\n      await fetch(\"http://localhost:3030/member/\".concat(_id), {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: data\n      }).then(res => res.json());\n      cellVerification ? window.location.reload() : this.setState({\n        isWrongCell: true\n      });\n    };\n\n    this.handleClickDelete = async () => {\n      const _id = this.state._id;\n      const response = await fetch(\"http://localhost:3030/member/\".concat(_id), {\n        method: \"DELETE\"\n      }).then(res => res.json());\n      console.log(response);\n    };\n\n    this.handleClickCancel = () => {\n      const cancelModal = this.props.cancelModal;\n      cancelModal();\n    };\n\n    this.handleChange = e => {\n      const key = e.target.name;\n      const value = e.target.value;\n      this.setState({\n        [key]: value\n      });\n    };\n\n    const _props$memberInfo = props.memberInfo,\n          _id2 = _props$memberInfo._id,\n          _cell = _props$memberInfo.cell,\n          _enrolledIn = _props$memberInfo.enrolledIn,\n          _nickName = _props$memberInfo.nickName;\n    this.state = {\n      nickName: _nickName,\n      cell: _cell,\n      enrolledIn: _enrolledIn,\n      _id: _id2,\n      isWrongCell: false,\n      cells: props.cells\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          nickName = _this$state2.nickName,\n          enrolledIn = _this$state2.enrolledIn,\n          cell = _this$state2.cell,\n          isWrongCell = _this$state2.isWrongCell;\n    return React.createElement(\"div\", {\n      className: \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"background\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onClick: this.handleClickCancel,\n      className: \"cancel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"key\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"\\uB2C9\\uB124\\uC784\"), React.createElement(\"input\", {\n      name: \"nickName\",\n      onChange: this.handleChange,\n      value: nickName,\n      className: \"value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"key\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"\\uC18C\\uC18D\"), React.createElement(\"input\", {\n      name: \"cell\",\n      onChange: this.handleChange,\n      value: cell,\n      className: isWrongCell ? \"wrongCell\" : \"value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"key\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"\\uC785\\uC0AC\\uC77C\"), React.createElement(\"input\", {\n      name: \"enrolledIn\",\n      onChange: this.handleChange,\n      value: enrolledIn,\n      className: \"value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"button-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleClickConfirm,\n      className: \"change\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"\\uD655\\uC778\"), React.createElement(\"button\", {\n      onClick: this.handleClickDelete,\n      className: \"delete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"\\uC0AD\\uC81C\")))));\n  }\n\n}\n\nexport default Modal;","map":{"version":3,"sources":["/Users/yungchoyou/Desktop/group_meal_front/secode/group_meal_front/src/Pages/EmployeeTable/Modal.js"],"names":["React","Component","Modal","constructor","props","handleClickConfirm","state","_id","nickName","cell","enrolledIn","cells","cellVerification","forEach","cellData","name","console","log","data","JSON","stringify","fetch","method","headers","Accept","body","then","res","json","window","location","reload","setState","isWrongCell","handleClickDelete","response","handleClickCancel","cancelModal","handleChange","e","key","target","value","memberInfo","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nclass Modal extends Component {\n  constructor(props) {\n    super();\n    const { _id, cell, enrolledIn, nickName } = props.memberInfo;\n\n    this.state = {\n      nickName,\n      cell,\n      enrolledIn,\n      _id,\n      isWrongCell: false,\n      cells: props.cells\n    };\n  }\n\n  handleClickConfirm = async () => {\n    const { _id, nickName, cell, enrolledIn, cells } = this.state;\n    let cellVerification = true;\n\n    cells.forEach(cellData => {\n      if (cellData.name !== cell) {\n        console.log(cell, cellData.name);\n        cellVerification = false;\n      }\n    });\n\n    const data = JSON.stringify({ nickName, cell, enrolledIn });\n\n    await fetch(`http://localhost:3030/member/${_id}`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: data\n    }).then(res => res.json());\n\n    cellVerification\n      ? window.location.reload()\n      : this.setState({ isWrongCell: true });\n  };\n\n  handleClickDelete = async () => {\n    const { _id } = this.state;\n\n    const response = await fetch(`http://localhost:3030/member/${_id}`, {\n      method: \"DELETE\"\n    }).then(res => res.json());\n\n    console.log(response);\n  };\n\n  handleClickCancel = () => {\n    const { cancelModal } = this.props;\n\n    cancelModal();\n  };\n\n  handleChange = e => {\n    const key = e.target.name;\n    const value = e.target.value;\n\n    this.setState({ [key]: value });\n  };\n\n  render() {\n    const { nickName, enrolledIn, cell, isWrongCell } = this.state;\n\n    return (\n      <div className=\"modal\">\n        <div className=\"background\">\n          <div className=\"card\">\n            <span onClick={this.handleClickCancel} className=\"cancel\"></span>\n            <div className=\"row\">\n              <div className=\"key\">닉네임</div>\n              <input\n                name=\"nickName\"\n                onChange={this.handleChange}\n                value={nickName}\n                className=\"value\"\n              />\n            </div>\n            <div className=\"row\">\n              <div className=\"key\">소속</div>\n              <input\n                name=\"cell\"\n                onChange={this.handleChange}\n                value={cell}\n                className={isWrongCell ? \"wrongCell\" : \"value\"}\n              />\n            </div>\n            <div className=\"row\">\n              <div className=\"key\">입사일</div>\n              <input\n                name=\"enrolledIn\"\n                onChange={this.handleChange}\n                value={enrolledIn}\n                className=\"value\"\n              />\n            </div>\n            <div className=\"button-wrapper\">\n              <button onClick={this.handleClickConfirm} className=\"change\">\n                확인\n              </button>\n              <button onClick={this.handleClickDelete} className=\"delete\">\n                삭제\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}