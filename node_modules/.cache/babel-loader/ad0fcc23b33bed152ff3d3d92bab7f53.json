{"ast":null,"code":"var _jsxFileName = \"/Users/yungchoyou/Desktop/group_meal_front/secode/group_meal_front/src/Pages/AdminPage/AdminPage.js\";\nimport React, { Component } from \"react\";\nimport \"./AdminPage.scss\";\nimport Nav from \"Components/Nav\";\nimport UserRow from \"./UserRow\";\nimport { url } from \"config\";\nexport class AdminPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputs = e => {\n      this.setState({\n        [e.target.name]: [e.target.value]\n      });\n    };\n\n    this.handleDelete = adminid => {\n      const access_token = sessionStorage.getItem(\"access_token\");\n      fetch(\"\".concat(url, \"admin/\").concat(adminid), {\n        method: \"delete\",\n        headers: {\n          authorization: access_token\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(res => {\n        res.message === \"success\" && window.location.reload();\n      });\n    };\n\n    this.handlePost = () => {\n      const access_token = sessionStorage.getItem(\"access_token\");\n      const name = this.state.NameInput[0];\n      const email = this.state.EmailInput[0];\n      fetch(\"\".concat(url, \"admin\"), {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          authorization: access_token\n        },\n        body: JSON.stringify({\n          name,\n          email\n        })\n      }).then(res => res.json()).then(res => {\n        if (res.error === \"Bad Request\") {\n          alert(\"양식에 맞지 않습니다.\");\n        } else if (res.error === \"Admin already exists\") {\n          alert(\"이미 존재하는 관리자입니다.\");\n        } else {\n          window.location.reload();\n        }\n      });\n    };\n\n    this.state = {\n      UserRows: [],\n      NameInput: \"\",\n      EmailInput: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const access_token = sessionStorage.getItem(\"access_token\");\n    fetch(\"\".concat(url, \"admin\"), {\n      method: \"get\",\n      headers: {\n        authorization: access_token\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(res => {\n      this.setState({\n        UserRows: res.admins\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"admin-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"\\uAD00\\uB9AC\\uC790 \\uC124\\uC815\"), React.createElement(\"div\", {\n      className: \"body-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"body-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"body-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"\\uAD00\\uB9AC\\uC790 \\uC0AD\\uC81C\"), this.state.UserRows.map((el, idx) => {\n      return React.createElement(UserRow, {\n        submit: this.handleDelete,\n        info: el,\n        index: idx,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      });\n    })), React.createElement(\"div\", {\n      className: \"body-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"\\uAD00\\uB9AC\\uC790 \\uCD94\\uAC00\"), React.createElement(\"input\", {\n      name: \"NameInput\",\n      onChange: this.handleInputs,\n      placeholder: \"\\uC774\\uB984\",\n      className: \"input-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"EmailInput\",\n      onChange: this.handleInputs,\n      placeholder: \"\\uC774\\uBA54\\uC77C\",\n      className: \"input-email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handlePost,\n      className: \"submit-inputs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"\\uCD94\\uAC00\"))))));\n  }\n\n}\nexport default AdminPage;","map":{"version":3,"sources":["/Users/yungchoyou/Desktop/group_meal_front/secode/group_meal_front/src/Pages/AdminPage/AdminPage.js"],"names":["React","Component","Nav","UserRow","url","AdminPage","constructor","props","handleInputs","e","setState","target","name","value","handleDelete","adminid","access_token","sessionStorage","getItem","fetch","method","headers","authorization","then","res","json","message","window","location","reload","handlePost","state","NameInput","email","EmailInput","body","JSON","stringify","error","alert","UserRows","componentDidMount","admins","render","map","el","idx"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./AdminPage.scss\";\nimport Nav from \"Components/Nav\";\nimport UserRow from \"./UserRow\";\nimport { url } from \"config\";\n\nexport class AdminPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      UserRows: [],\n      NameInput: \"\",\n      EmailInput: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const access_token = sessionStorage.getItem(\"access_token\");\n    fetch(`${url}admin`, {\n      method: \"get\",\n      headers: { authorization: access_token }\n    })\n      .then(function(res) {\n        return res.json();\n      })\n      .then(res => {\n        this.setState({ UserRows: res.admins });\n      });\n  }\n\n  handleInputs = e => {\n    this.setState({ [e.target.name]: [e.target.value] });\n  };\n\n  handleDelete = adminid => {\n    const access_token = sessionStorage.getItem(\"access_token\");\n    fetch(`${url}admin/${adminid}`, {\n      method: \"delete\",\n      headers: { authorization: access_token }\n    })\n      .then(function(res) {\n        return res.json();\n      })\n      .then(res => {\n        res.message === \"success\" && window.location.reload();\n      });\n  };\n\n  handlePost = () => {\n    const access_token = sessionStorage.getItem(\"access_token\");\n    const name = this.state.NameInput[0];\n    const email = this.state.EmailInput[0];\n    fetch(`${url}admin`, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: access_token\n      },\n      body: JSON.stringify({ name, email })\n    })\n      .then(res => res.json())\n      .then(res => {\n        if (res.error === \"Bad Request\") {\n          alert(\"양식에 맞지 않습니다.\");\n        } else if (res.error === \"Admin already exists\") {\n          alert(\"이미 존재하는 관리자입니다.\");\n        } else {\n          window.location.reload();\n        }\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        <Nav />\n        <div className=\"admin-page\">\n          <div className=\"main\">\n            <div className=\"title\">관리자 설정</div>\n            <div className=\"body-container\">\n              <div className=\"body-left\">\n                <div className=\"body-title\">관리자 삭제</div>\n                {this.state.UserRows.map((el, idx) => {\n                  return (\n                    <UserRow submit={this.handleDelete} info={el} index={idx} />\n                  );\n                })}\n              </div>\n              <div className=\"body-right\">\n                <div className=\"input-title\">관리자 추가</div>\n                <input\n                  name=\"NameInput\"\n                  onChange={this.handleInputs}\n                  placeholder=\"이름\"\n                  className=\"input-name\"\n                ></input>\n                <input\n                  name=\"EmailInput\"\n                  onChange={this.handleInputs}\n                  placeholder=\"이메일\"\n                  className=\"input-email\"\n                ></input>\n                <button onClick={this.handlePost} className=\"submit-inputs\">\n                  추가\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AdminPage;\n"]},"metadata":{},"sourceType":"module"}