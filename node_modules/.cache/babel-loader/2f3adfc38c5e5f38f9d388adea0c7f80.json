{"ast":null,"code":"var _jsxFileName = \"/Users/yungchoyou/Desktop/group_meal_front/secode/group_meal_front/src/Pages/Roulette/Roulette.js\";\nimport React, { Component } from \"react\";\nimport \"./Roulette.scss\";\nimport Nav from \"Components/Nav\";\nimport roulettemock from \"Data/roulettemock.js\";\nimport roulettemock2 from \"Data/roulettemock2.js\";\nimport PreGroupBox from \"Components/PreGroupBox\";\nimport roulettegif from \"Img/roulette.gif\";\nexport class Roulette extends Component {\n  constructor() {\n    super();\n\n    this.runRoulette = () => {\n      // fetch(\"로직돌린점술판\", {\n      //   method: \"get\"\n      // })\n      //   .then(function(res) {\n      //     return res.json();\n      //   })\n      //   .then(res => {\n      //     //console.log(res.data);\n      //     let roulettemockReal = res.data;\n      //     this.setState({ isClicked: true, rouletteMock: roulettemockReal });\n      //   });\n      this.setState({\n        isClicked: true\n      });\n    };\n\n    this.sendAndretrun = () => {\n      // fetch(\"수정끝난거\", {\n      //   method: \"post\",\n      //   body: JSON.stringify({\n      //     email: this.state.idValue,\n      //     password: this.state.pwValue,\n      //     summoner_name: this.state.nameValue\n      //   })\n      // })\n      //   .then(function(res) {\n      //     return res.json();\n      //   })\n      //   .then(res => {\n      //     this.setState({\n      //       previousData: this.state.rouletteMock,\n      //       isClicked: false\n      //     });\n      //     alert(\"점술판이 반영되었습니다\");\n      //   });\n      if (this.state.isAvailable && !this.state.isOverlapped) {\n        this.setState({\n          isClicked: false,\n          previousData: this.state.rouletteMock\n        });\n      } else if (this.state.isOverlapped) {\n        alert(\"(\" + this.state.OverlappedName + \")가 중복되었습니다!!\");\n      } else {\n        alert(\"(\" + this.state.unAvailableName + \")는 없는 이름입니다!!\");\n      }\n    };\n\n    this.identifierMethod = (e, i, j) => {\n      console.log(e.target.value);\n      const rouletteMockArr = this.state.rouletteMock.slice();\n      const rl = this.state.rouletteMockList.slice();\n      rouletteMockArr[i][j] = e.target.value;\n      this.setState({\n        rouletteMock: rouletteMockArr\n      });\n\n      if (rl.indexOf(e.target.value) === -1) {\n        this.setState({\n          isAvailable: false,\n          unAvailableName: e.target.value\n        });\n      } else {\n        this.setState({\n          isAvailable: true\n        });\n      }\n    };\n\n    this.classNameFinder = j => {\n      if (j === 0) {\n        return \"input-leader\";\n      } else if (j === 1) {\n        return \"input-second\";\n      } else if (j === 4) {\n        return \"input-last\";\n      } else {\n        return \"input-normal\";\n      }\n    };\n\n    this.renderTables = list => {\n      let allInputs = [];\n\n      if (list) {\n        for (let i = 0; i < list.length; i++) {\n          for (let j = 0; j < list[i].length; j++) {\n            allInputs.push(React.createElement(\"input\", {\n              name: \"\".concat(i, \",\").concat(j),\n              value: list[i][j],\n              onChange: e => this.identifierMethod(e, i, j),\n              className: this.classNameFinder(j),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 114\n              },\n              __self: this\n            }));\n          }\n        }\n      }\n    };\n\n    this.state = {\n      isClicked: true,\n      rouletteMock: roulettemock.groupMeals,\n      rouletteMockList: roulettemock.groupMeals.flat(),\n      previousData: roulettemock2.groupMeals,\n      isAvailable: true,\n      unAvailableName: \"\",\n      isOverlapped: false,\n      OverlappedName: \"\"\n    };\n  } // componentDidMount = () => {\n  //   fetch(\"이전돌림판기록\", {\n  //     method: \"get\"\n  //   })\n  //     .then(function(res) {\n  //       return res.json();\n  //     })\n  //     .then(res => {\n  //       //console.log(res.data);\n  //       let previousdata = res.data;\n  //       this.setState({ previousData: previousdata });\n  //     });\n  // };\n\n\n  render() {\n    const rouletteMock = this.state.rouletteMock;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"roulette-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"rl-empty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), this.state.isClicked ? React.createElement(\"div\", {\n      className: \"rl-result\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"rl-uppercontainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"rl-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"\\uC810\\uC220\\uD310 \\uACB0\\uACFC\")), React.createElement(\"div\", {\n      className: \"rl-buttoncontainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.sendAndretrun,\n      className: \"rl-confirm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"\\uD655\\uC778\")), React.createElement(\"div\", {\n      className: \"rl-inputs-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inputs-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), this.renderTables(rouletteMock))) : React.createElement(\"div\", {\n      className: \"rl-runsection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"runsection-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"\\uB3CC\\uB824\\uB3CC\\uB824 \\uC810\\uC220\\uD310!!!\"), React.createElement(\"img\", {\n      src: roulettegif,\n      alt: \"noimage\",\n      className: \"runsection-gif\",\n      onClick: this.runRoulette,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"history-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"rl-uppercontainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"rl-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"\\uC774\\uC804 \\uC810\\uC220\\uD310\")), React.createElement(\"div\", {\n      className: \"rl-groupcontainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, this.state.previousData.map((el, idx) => {\n      return React.createElement(PreGroupBox, {\n        info: el,\n        index: idx,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      });\n    })))));\n  }\n\n}\nexport default Roulette;","map":{"version":3,"sources":["/Users/yungchoyou/Desktop/group_meal_front/secode/group_meal_front/src/Pages/Roulette/Roulette.js"],"names":["React","Component","Nav","roulettemock","roulettemock2","PreGroupBox","roulettegif","Roulette","constructor","runRoulette","setState","isClicked","sendAndretrun","state","isAvailable","isOverlapped","previousData","rouletteMock","alert","OverlappedName","unAvailableName","identifierMethod","e","i","j","console","log","target","value","rouletteMockArr","slice","rl","rouletteMockList","indexOf","classNameFinder","renderTables","list","allInputs","length","push","groupMeals","flat","render","map","el","idx"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Roulette.scss\";\nimport Nav from \"Components/Nav\";\nimport roulettemock from \"Data/roulettemock.js\";\nimport roulettemock2 from \"Data/roulettemock2.js\";\nimport PreGroupBox from \"Components/PreGroupBox\";\nimport roulettegif from \"Img/roulette.gif\";\n\nexport class Roulette extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isClicked: true,\n      rouletteMock: roulettemock.groupMeals,\n      rouletteMockList: roulettemock.groupMeals.flat(),\n      previousData: roulettemock2.groupMeals,\n      isAvailable: true,\n      unAvailableName: \"\",\n      isOverlapped: false,\n      OverlappedName: \"\"\n    };\n  }\n\n  // componentDidMount = () => {\n  //   fetch(\"이전돌림판기록\", {\n  //     method: \"get\"\n  //   })\n  //     .then(function(res) {\n  //       return res.json();\n  //     })\n  //     .then(res => {\n  //       //console.log(res.data);\n  //       let previousdata = res.data;\n  //       this.setState({ previousData: previousdata });\n  //     });\n  // };\n  runRoulette = () => {\n    // fetch(\"로직돌린점술판\", {\n    //   method: \"get\"\n    // })\n    //   .then(function(res) {\n    //     return res.json();\n    //   })\n    //   .then(res => {\n    //     //console.log(res.data);\n    //     let roulettemockReal = res.data;\n    //     this.setState({ isClicked: true, rouletteMock: roulettemockReal });\n    //   });\n    this.setState({ isClicked: true });\n  };\n\n  sendAndretrun = () => {\n    // fetch(\"수정끝난거\", {\n    //   method: \"post\",\n    //   body: JSON.stringify({\n    //     email: this.state.idValue,\n    //     password: this.state.pwValue,\n    //     summoner_name: this.state.nameValue\n    //   })\n    // })\n    //   .then(function(res) {\n    //     return res.json();\n    //   })\n    //   .then(res => {\n    //     this.setState({\n    //       previousData: this.state.rouletteMock,\n    //       isClicked: false\n    //     });\n    //     alert(\"점술판이 반영되었습니다\");\n    //   });\n    if (this.state.isAvailable && !this.state.isOverlapped) {\n      this.setState({\n        isClicked: false,\n        previousData: this.state.rouletteMock\n      });\n    } else if (this.state.isOverlapped) {\n      alert(\"(\" + this.state.OverlappedName + \")가 중복되었습니다!!\");\n    } else {\n      alert(\"(\" + this.state.unAvailableName + \")는 없는 이름입니다!!\");\n    }\n  };\n\n  identifierMethod = (e, i, j) => {\n    console.log(e.target.value);\n    const rouletteMockArr = this.state.rouletteMock.slice();\n    const rl = this.state.rouletteMockList.slice();\n    rouletteMockArr[i][j] = e.target.value;\n    this.setState({ rouletteMock: rouletteMockArr });\n    if (rl.indexOf(e.target.value) === -1) {\n      this.setState({ isAvailable: false, unAvailableName: e.target.value });\n    } else {\n      this.setState({ isAvailable: true });\n    }\n  };\n\n  classNameFinder = j => {\n    if (j === 0) {\n      return \"input-leader\";\n    } else if (j === 1) {\n      return \"input-second\";\n    } else if (j === 4) {\n      return \"input-last\";\n    } else {\n      return \"input-normal\";\n    }\n  };\n\n  renderTables = list => {\n    let allInputs = [];\n    if (list) {\n      for (let i = 0; i < list.length; i++) {\n        for (let j = 0; j < list[i].length; j++) {\n          allInputs.push(\n            <input\n              name={`${i},${j}`}\n              value={list[i][j]}\n              onChange={e => this.identifierMethod(e, i, j)}\n              className={this.classNameFinder(j)}\n            />\n          );\n        }\n      }\n    }\n  };\n\n  render() {\n    const { rouletteMock } = this.state;\n\n    return (\n      <div>\n        <Nav />\n        <div className=\"roulette-body\">\n          <div className=\"rl-empty\"></div>\n\n          {this.state.isClicked ? (\n            <div className=\"rl-result\">\n              <div className=\"rl-uppercontainer\">\n                <div className=\"rl-title\">점술판 결과</div>\n              </div>\n              <div className=\"rl-buttoncontainer\">\n                <button onClick={this.sendAndretrun} className=\"rl-confirm\">\n                  확인\n                </button>\n              </div>\n              <div className=\"rl-inputs-container\">\n                <div className=\"inputs-title\"></div>\n                {this.renderTables(rouletteMock)}\n              </div>\n            </div>\n          ) : (\n            <div className=\"rl-runsection\">\n              <div className=\"runsection-title\">돌려돌려 점술판!!!</div>\n              <img\n                src={roulettegif}\n                alt=\"noimage\"\n                className=\"runsection-gif\"\n                onClick={this.runRoulette}\n              ></img>\n            </div>\n          )}\n\n          <div className=\"history-container\">\n            <div className=\"rl-uppercontainer\">\n              <div className=\"rl-title\">이전 점술판</div>\n            </div>\n            <div className=\"rl-groupcontainer\">\n              {this.state.previousData.map((el, idx) => {\n                return <PreGroupBox info={el} index={idx} />;\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Roulette;\n"]},"metadata":{},"sourceType":"module"}