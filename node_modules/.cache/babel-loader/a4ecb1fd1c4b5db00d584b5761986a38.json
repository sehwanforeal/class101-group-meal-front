{"ast":null,"code":"var _jsxFileName = \"/Users/yungchoyou/Desktop/group_meal_front/secode/group_meal_front/src/Pages/Cell/Cell.js\";\nimport React, { Component } from \"react\";\nimport Nav from \"Components/Nav\";\nimport Tables from \"Components/Tables\";\nimport \"./Cell.scss\";\nimport config from \"config.js\";\n\nclass Cell extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cells: [],\n      modalOn: false,\n      inputVal: \"\",\n      selectedCell: \"\"\n    };\n\n    this.fetchCells = async () => {\n      const response = await fetch(\"\".concat(config.url, \"cell\")).then(res => res.json());\n      const cells = response.map(res => {\n        return res.name;\n      });\n      this.setState({\n        cells\n      });\n    };\n\n    this.handleClick = cell => {\n      this.setState({\n        modalOn: true,\n        selectedCell: cell\n      });\n    };\n\n    this.handleChange = e => {\n      const val = e.target.value;\n      this.setState({\n        inputVal: val\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchCells();\n  }\n\n  render() {\n    const _this$state = this.state,\n          cells = _this$state.cells,\n          inputVal = _this$state.inputVal,\n          modalOn = _this$state.modalOn;\n    return React.createElement(React.Fragment, null, modalOn && React.createElement(\"div\", {\n      className: \"smallInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"\\uC140 \\uC774\\uB984\\uC744 \\uBCC0\\uACBD\\uD558\\uC138\\uC694\"), React.createElement(\"input\", {\n      onChange: this.handleChange,\n      value: inputVal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"\\uC140 \\uAD00\\uB9AC\")), React.createElement(\"div\", {\n      className: \"tools\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleClickTool,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"\\uC140 \\uCD94\\uAC00\")), React.createElement(\"div\", {\n      className: \"tables\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Tables, {\n      onClick: this.handleClick,\n      listData: cells,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default Cell;","map":{"version":3,"sources":["/Users/yungchoyou/Desktop/group_meal_front/secode/group_meal_front/src/Pages/Cell/Cell.js"],"names":["React","Component","Nav","Tables","config","Cell","state","cells","modalOn","inputVal","selectedCell","fetchCells","response","fetch","url","then","res","json","map","name","setState","handleClick","cell","handleChange","e","val","target","value","componentDidMount","render","handleClickTool"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,aAAP;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3BK,KAD2B,GACnB;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,OAAO,EAAE,KAFH;AAGNC,MAAAA,QAAQ,EAAE,EAHJ;AAINC,MAAAA,YAAY,EAAE;AAJR,KADmB;;AAAA,SAY3BC,UAZ2B,GAYd,YAAY;AACvB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,WAAIT,MAAM,CAACU,GAAX,UAAL,CAA2BC,IAA3B,CAAgCC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAvC,CAAvB;AAEA,YAAMV,KAAK,GAAGK,QAAQ,CAACM,GAAT,CAAaF,GAAG,IAAI;AAChC,eAAOA,GAAG,CAACG,IAAX;AACD,OAFa,CAAd;AAIA,WAAKC,QAAL,CAAc;AAAEb,QAAAA;AAAF,OAAd;AACD,KApB0B;;AAAA,SAsB3Bc,WAtB2B,GAsBbC,IAAI,IAAI;AACpB,WAAKF,QAAL,CAAc;AAAEZ,QAAAA,OAAO,EAAE,IAAX;AAAiBE,QAAAA,YAAY,EAAEY;AAA/B,OAAd;AACD,KAxB0B;;AAAA,SA0B3BC,YA1B2B,GA0BZC,CAAC,IAAI;AAClB,YAAMC,GAAG,GAAGD,CAAC,CAACE,MAAF,CAASC,KAArB;AAEA,WAAKP,QAAL,CAAc;AAAEX,QAAAA,QAAQ,EAAEgB;AAAZ,OAAd;AACD,KA9B0B;AAAA;;AAQ3BG,EAAAA,iBAAiB,GAAG;AAClB,SAAKjB,UAAL;AACD;;AAsBDkB,EAAAA,MAAM,GAAG;AAAA,wBAC8B,KAAKvB,KADnC;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQE,QADR,eACQA,QADR;AAAA,UACkBD,OADlB,eACkBA,OADlB;AAGP,WACE,0CACGA,OAAO,IACN;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEADF,EAEE;AAAO,MAAA,QAAQ,EAAE,KAAKe,YAAtB;AAAoC,MAAA,KAAK,EAAEd,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFJ,EAQE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EASE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,CADF,EAIE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,KAAKqB,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,CAJF,EAOE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKT,WAAtB;AAAmC,MAAA,QAAQ,EAAEd,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAPF,CADF,CATF,CADF;AAyBD;;AA5D0B;;AA+D7B,eAAeF,IAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Nav from \"Components/Nav\";\nimport Tables from \"Components/Tables\";\nimport \"./Cell.scss\";\nimport config from \"config.js\";\n\nclass Cell extends Component {\n  state = {\n    cells: [],\n    modalOn: false,\n    inputVal: \"\",\n    selectedCell: \"\"\n  };\n\n  componentDidMount() {\n    this.fetchCells();\n  }\n\n  fetchCells = async () => {\n    const response = await fetch(`${config.url}cell`).then(res => res.json());\n\n    const cells = response.map(res => {\n      return res.name;\n    });\n\n    this.setState({ cells });\n  };\n\n  handleClick = cell => {\n    this.setState({ modalOn: true, selectedCell: cell });\n  };\n\n  handleChange = e => {\n    const val = e.target.value;\n\n    this.setState({ inputVal: val });\n  };\n\n  render() {\n    const { cells, inputVal, modalOn } = this.state;\n\n    return (\n      <>\n        {modalOn && (\n          <div className=\"smallInput\">\n            <div className=\"title\">셀 이름을 변경하세요</div>\n            <input onChange={this.handleChange} value={inputVal} />\n          </div>\n        )}\n\n        <Nav />\n        <div className=\"page\">\n          <main>\n            <div className=\"title\">\n              <span>셀 관리</span>\n            </div>\n            <div className=\"tools\">\n              <button onClick={this.handleClickTool}>셀 추가</button>\n            </div>\n            <div className=\"tables\">\n              <Tables onClick={this.handleClick} listData={cells} />\n            </div>\n          </main>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Cell;\n"]},"metadata":{},"sourceType":"module"}