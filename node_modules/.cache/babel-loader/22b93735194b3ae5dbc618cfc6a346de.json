{"ast":null,"code":"var _jsxFileName = \"/Users/yungchoyou/Desktop/group_meal_front/secode/group_meal_front/src/Pages/Roulette/Roulette.js\";\nimport React, { Component } from \"react\";\nimport \"./Roulette.scss\";\nimport Nav from \"Components/Nav\";\nimport roulettemock from \"Data/roulettemock.js\";\nimport GroupBox from \"Components/GroupBox\";\nimport PreGroupBox from \"Components/PreGroupBox\";\nimport roulettegif from \"Img/roulette.gif\";\nexport class Roulette extends Component {\n  constructor() {\n    super();\n\n    this.identifierMethod = (e, i, j) => {\n      console.log(e.target.value);\n      const routtleMockArr = this.state.rouletteMock.slice();\n      routtleMockArr[i][j] = e.target.value;\n      this.setState({\n        rouletteMock: routtleMockArr\n      });\n    };\n\n    this.sendAndretrun = () => {\n      this.setState({\n        isClicked: false\n      });\n      alert(\"점술판이 컨펌되었습니다\");\n    };\n\n    this.state = {\n      rouletteMock: roulettemock.groupMeals,\n      isClicked: false\n    };\n  }\n\n  render() {\n    const rouletteMock = this.state.rouletteMock;\n    let allInputs = [];\n\n    if (rouletteMock) {\n      for (let i = 0; i < rouletteMock.length; i++) {\n        for (let j = 0; j < rouletteMock[i].length; j++) {\n          allInputs.push(React.createElement(\"input\", {\n            name: \"\".concat(i, \",\").concat(j),\n            value: rouletteMock[i][j],\n            onChange: e => this.identifierMethod(e, i, j),\n            className: j === 0 ? \"input-leader\" : \"input-normal\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }));\n        }\n      }\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"roulette-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"rl-empty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), this.state.isClicked ? React.createElement(\"div\", {\n      className: \"rl-result\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"rl-uppercontainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"rl-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"\\uC810\\uC220\\uD310 \\uACB0\\uACFC!! \"), React.createElement(\"div\", {\n      calssName: \"rl-buttoncontainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.sendAndretrun,\n      className: \"rl-confirm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"\\uCEE8\\uD38C\\uD558\\uAE30\"))), React.createElement(\"div\", {\n      className: \"rl-inputs-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inputs-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), allInputs)) : React.createElement(\"div\", {\n      className: \"rl-runsection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"runsection-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"\\uB3CC\\uB824\\uB3CC\\uB824 \\uC810\\uC220\\uD310!!!\"), React.createElement(\"img\", {\n      src: roulettegif,\n      alt: \"noimage\",\n      className: \"runsection-gif\",\n      onClick: () => {\n        this.setState({\n          isClicked: true\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"history-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \" \", React.createElement(\"div\", {\n      className: \"rl-uppercontainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"rl-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"\\uC774\\uC804 \\uC810\\uC220\\uD310\")), React.createElement(\"div\", {\n      className: \"rl-groupcontainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, roulettemock.groupMeals.map((el, idx) => {\n      return React.createElement(PreGroupBox, {\n        info: el,\n        index: idx,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      });\n    })))));\n  }\n\n}\nexport default Roulette;","map":{"version":3,"sources":["/Users/yungchoyou/Desktop/group_meal_front/secode/group_meal_front/src/Pages/Roulette/Roulette.js"],"names":["React","Component","Nav","roulettemock","GroupBox","PreGroupBox","roulettegif","Roulette","constructor","identifierMethod","e","i","j","console","log","target","value","routtleMockArr","state","rouletteMock","slice","setState","sendAndretrun","isClicked","alert","groupMeals","render","allInputs","length","push","map","el","idx"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Roulette.scss\";\nimport Nav from \"Components/Nav\";\nimport roulettemock from \"Data/roulettemock.js\";\nimport GroupBox from \"Components/GroupBox\";\nimport PreGroupBox from \"Components/PreGroupBox\";\nimport roulettegif from \"Img/roulette.gif\";\n\nexport class Roulette extends Component {\n  constructor() {\n    super();\n    this.state = {\n      rouletteMock: roulettemock.groupMeals,\n      isClicked: false\n    };\n  }\n  identifierMethod = (e, i, j) => {\n    console.log(e.target.value);\n    const routtleMockArr = this.state.rouletteMock.slice();\n    routtleMockArr[i][j] = e.target.value;\n    this.setState({ rouletteMock: routtleMockArr });\n  };\n  sendAndretrun = () => {\n    this.setState({ isClicked: false });\n    alert(\"점술판이 컨펌되었습니다\");\n  };\n\n  render() {\n    const { rouletteMock } = this.state;\n\n    let allInputs = [];\n    if (rouletteMock) {\n      for (let i = 0; i < rouletteMock.length; i++) {\n        for (let j = 0; j < rouletteMock[i].length; j++) {\n          allInputs.push(\n            <input\n              name={`${i},${j}`}\n              value={rouletteMock[i][j]}\n              onChange={e => this.identifierMethod(e, i, j)}\n              className={j === 0 ? \"input-leader\" : \"input-normal\"}\n            />\n          );\n        }\n      }\n    }\n    return (\n      <div>\n        <Nav />\n        <div className=\"roulette-body\">\n          <div className=\"rl-empty\"></div>\n\n          {this.state.isClicked ? (\n            <div className=\"rl-result\">\n              <div className=\"rl-uppercontainer\">\n                <div className=\"rl-title\">점술판 결과!! </div>\n\n                <div calssName=\"rl-buttoncontainer\">\n                  <button onClick={this.sendAndretrun} className=\"rl-confirm\">\n                    컨펌하기\n                  </button>\n                </div>\n              </div>\n              <div className=\"rl-inputs-container\">\n                <div className=\"inputs-title\"></div>\n                {allInputs}\n              </div>\n            </div>\n          ) : (\n            <div className=\"rl-runsection\">\n              <div className=\"runsection-title\">돌려돌려 점술판!!!</div>\n              <img\n                src={roulettegif}\n                alt=\"noimage\"\n                className=\"runsection-gif\"\n                onClick={() => {\n                  this.setState({ isClicked: true });\n                }}\n              ></img>\n            </div>\n          )}\n\n          <div className=\"history-container\">\n            {\" \"}\n            <div className=\"rl-uppercontainer\">\n              <div className=\"rl-title\">이전 점술판</div>\n            </div>\n            <div className=\"rl-groupcontainer\">\n              {roulettemock.groupMeals.map((el, idx) => {\n                return <PreGroupBox info={el} index={idx} />;\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Roulette;\n"]},"metadata":{},"sourceType":"module"}