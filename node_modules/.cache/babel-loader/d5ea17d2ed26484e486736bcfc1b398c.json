{"ast":null,"code":"var _jsxFileName = \"/Users/yungchoyou/Desktop/group_meal_front/secode/group_meal_front/src/Pages/Cell/Cell.js\";\nimport React, { Component } from \"react\";\nimport Nav from \"Components/Nav\";\nimport Tables from \"Components/Tables\";\nimport \"./Cell.scss\";\nimport config from \"config.js\";\n\nclass Cell extends Component {\n  constructor() {\n    super();\n\n    this.handleKeypress = () => {\n      e.keyCode === 13 && this.handleClickConfirm();\n    };\n\n    this.fetchCells = async () => {\n      const response = await fetch(\"\".concat(config.url, \"cell\")).then(res => res.json());\n      const cells = response.map(res => {\n        return res;\n      });\n      this.setState({\n        cells\n      });\n    };\n\n    this.handleClick = cell => {\n      this.setState({\n        modalOn: true,\n        inputVal: cell,\n        selectedCell: cell\n      });\n    };\n\n    this.handleChange = e => {\n      const val = e.target.value;\n      this.setState({\n        inputVal: val\n      });\n    };\n\n    this.cancelInput = e => {\n      e.target.contains(this.page.current) && this.setState({\n        modalOn: false,\n        inputVal: \"\"\n      });\n    };\n\n    this.cancelModal = () => {\n      this.setState({\n        modalOn: false,\n        inputVal: \"\"\n      });\n    };\n\n    this.getCellId = cellName => {\n      const cells = this.state.cells;\n      let cellId = \"\";\n      cells.forEach(cell => {\n        if (cell.name === cellName) {\n          cellId = cell._id;\n        }\n      });\n      return cellId;\n    };\n\n    this.handleConfirm = async () => {\n      const _this$state = this.state,\n            selectedCell = _this$state.selectedCell,\n            inputVal = _this$state.inputVal;\n      const cellId = this.getCellId(selectedCell);\n      const url = config.url + \"cell/\" + cellId;\n      await fetch(url, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: inputVal\n        })\n      }).then(res => res.json()).then(res => console.log(res));\n      window.location.reload();\n    };\n\n    this.deleteCell = async () => {\n      const inputVal = this.state.inputVal;\n      const cellId = this.getCellId(inputVal);\n      const url = config.url + \"cell/\" + cellId;\n      await fetch(url, {\n        method: \"DELETE\"\n      }).then(res => res.json());\n      window.location.reload();\n    };\n\n    this.state = {\n      cells: [],\n      modalOn: false,\n      inputVal: \"\",\n      selectedCell: \"\"\n    };\n    this.page = React.createRef();\n  }\n\n  componentDidMount() {\n    this.fetchCells();\n    window.addEventListener(\"keypress\", this.handleKeypress);\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          cells = _this$state2.cells,\n          inputVal = _this$state2.inputVal,\n          modalOn = _this$state2.modalOn;\n    return React.createElement(React.Fragment, null, React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"page\",\n      ref: this.page,\n      onClick: this.cancelInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"\\uC140 \\uAD00\\uB9AC\")), React.createElement(\"div\", {\n      className: \"tools\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleClickTool,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"\\uC140 \\uCD94\\uAC00\")), React.createElement(\"div\", {\n      className: \"tables\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Tables, {\n      onClick: this.handleClick,\n      listData: cells.map(cell => cell.name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }))), modalOn && React.createElement(\"div\", {\n      className: \"smallInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"\\uC140 \\uC774\\uB984\\uC744 \\uBCC0\\uACBD\\uD558\\uC138\\uC694\"), React.createElement(\"input\", {\n      onChange: this.handleChange,\n      value: inputVal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"tools\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleConfirm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"\\uD655\\uC778\"), React.createElement(\"button\", {\n      onClick: this.deleteCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"\\uC0AD\\uC81C\"), React.createElement(\"button\", {\n      onClick: this.cancelModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"\\uCDE8\\uC18C\")))));\n  }\n\n}\n\nexport default Cell;","map":{"version":3,"sources":["/Users/yungchoyou/Desktop/group_meal_front/secode/group_meal_front/src/Pages/Cell/Cell.js"],"names":["React","Component","Nav","Tables","config","Cell","constructor","handleKeypress","e","keyCode","handleClickConfirm","fetchCells","response","fetch","url","then","res","json","cells","map","setState","handleClick","cell","modalOn","inputVal","selectedCell","handleChange","val","target","value","cancelInput","contains","page","current","cancelModal","getCellId","cellName","state","cellId","forEach","name","_id","handleConfirm","method","headers","Accept","body","JSON","stringify","console","log","window","location","reload","deleteCell","createRef","componentDidMount","addEventListener","render","handleClickTool"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Nav from \"Components/Nav\";\nimport Tables from \"Components/Tables\";\nimport \"./Cell.scss\";\nimport config from \"config.js\";\n\nclass Cell extends Component {\n  constructor() {\n    super();\n    this.state = {\n      cells: [],\n      modalOn: false,\n      inputVal: \"\",\n      selectedCell: \"\"\n    };\n\n    this.page = React.createRef();\n  }\n\n  handleKeypress = () => {\n    e.keyCode === 13 && this.handleClickConfirm();\n  };\n\n  componentDidMount() {\n    this.fetchCells();\n    window.addEventListener(\"keypress\", this.handleKeypress);\n  }\n\n  fetchCells = async () => {\n    const response = await fetch(`${config.url}cell`).then(res => res.json());\n\n    const cells = response.map(res => {\n      return res;\n    });\n\n    this.setState({ cells });\n  };\n\n  handleClick = cell => {\n    this.setState({ modalOn: true, inputVal: cell, selectedCell: cell });\n  };\n\n  handleChange = e => {\n    const val = e.target.value;\n\n    this.setState({ inputVal: val });\n  };\n\n  cancelInput = e => {\n    e.target.contains(this.page.current) &&\n      this.setState({ modalOn: false, inputVal: \"\" });\n  };\n\n  cancelModal = () => {\n    this.setState({ modalOn: false, inputVal: \"\" });\n  };\n\n  getCellId = cellName => {\n    const { cells } = this.state;\n\n    let cellId = \"\";\n\n    cells.forEach(cell => {\n      if (cell.name === cellName) {\n        cellId = cell._id;\n      }\n    });\n\n    return cellId;\n  };\n\n  handleConfirm = async () => {\n    const { selectedCell, inputVal } = this.state;\n    const cellId = this.getCellId(selectedCell);\n    const url = config.url + \"cell/\" + cellId;\n\n    await fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({ name: inputVal })\n    })\n      .then(res => res.json())\n      .then(res => console.log(res));\n\n    window.location.reload();\n  };\n\n  deleteCell = async () => {\n    const { inputVal } = this.state;\n    const cellId = this.getCellId(inputVal);\n    const url = config.url + \"cell/\" + cellId;\n\n    await fetch(url, {\n      method: \"DELETE\"\n    }).then(res => res.json());\n\n    window.location.reload();\n  };\n\n  render() {\n    const { cells, inputVal, modalOn } = this.state;\n\n    return (\n      <>\n        <Nav />\n        <div className=\"page\" ref={this.page} onClick={this.cancelInput}>\n          <main>\n            <div className=\"title\">\n              <span>셀 관리</span>\n            </div>\n            <div className=\"tools\">\n              <button onClick={this.handleClickTool}>셀 추가</button>\n            </div>\n            <div className=\"tables\">\n              <Tables\n                onClick={this.handleClick}\n                listData={cells.map(cell => cell.name)}\n              />\n            </div>\n          </main>\n          {modalOn && (\n            <div className=\"smallInput\">\n              <div className=\"title\">셀 이름을 변경하세요</div>\n              <input onChange={this.handleChange} value={inputVal} />\n              <div className=\"tools\">\n                <button onClick={this.handleConfirm}>확인</button>\n                <button onClick={this.deleteCell}>삭제</button>\n                <button onClick={this.cancelModal}>취소</button>\n              </div>\n            </div>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Cell;\n"]},"metadata":{},"sourceType":"module"}