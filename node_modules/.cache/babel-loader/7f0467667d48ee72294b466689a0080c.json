{"ast":null,"code":"var _jsxFileName = \"/Users/yungchoyou/Desktop/group_meal_front/secode/group_meal_front/src/Pages/EmployeeTable/Modal.js\";\nimport React, { Component } from \"react\";\n\nclass Modal extends Component {\n  constructor(props) {\n    super();\n\n    this.renderDate = datetime => {\n      const fullDate = new Date(datetime);\n      const year = fullDate.getFullYear();\n      const month = fullDate.getMonth() + 1 < 10 ? \"0\" + (fullDate.getMonth() + 1) : fullDate.getMonth() + 1;\n      const date = fullDate.getDate() < 10 ? \"0\" + fullDate.getDate() : fullDate.getDate();\n      return \"\".concat(year, \".\").concat(month, \".\").concat(date);\n    };\n\n    this.handleKeypress = e => {\n      e.keyCode === 13 && this.handleClickConfirm();\n    };\n\n    this.handleClickConfirm = () => {\n      const _this$state = this.state,\n            _id = _this$state._id,\n            nickName = _this$state.nickName,\n            cell = _this$state.cell,\n            datetime = _this$state.enrolledIn,\n            isWrongCell = _this$state.isWrongCell,\n            isWrongDate = _this$state.isWrongDate;\n      const enrolledIn = new Date(datetime);\n      const data = JSON.stringify({\n        nickName,\n        cell,\n        enrolledIn\n      });\n      fetch(\"http://localhost:3030/member/\".concat(_id), {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: data\n      }).then(res => res.json());\n      isWrongCell === false && isWrongDate === false && window.location.reload();\n    };\n\n    this.handleClickDelete = async () => {\n      const _id = this.state._id;\n      const response = await fetch(\"http://localhost:3030/member/\".concat(_id), {\n        method: \"DELETE\"\n      }).then(res => res.json());\n      console.log(response);\n    };\n\n    this.handleClickCancel = () => {\n      const cancelModal = this.props.cancelModal;\n      cancelModal();\n    };\n\n    this.handleChange = e => {\n      const key = e.target.name;\n      const value = e.target.value;\n      this.setState({\n        [key]: value\n      }, () => {\n        const _this$state2 = this.state,\n              cell = _this$state2.cell,\n              datetime = _this$state2.enrolledIn,\n              cells = _this$state2.cells;\n        const enrolledIn = new Date(datetime);\n        let cellVerification = false;\n        let dateVerification = false;\n\n        if (enrolledIn.toDateString() !== \"Invalid Date\") {\n          dateVerification = true;\n        } else {\n          dateVerification = false;\n        }\n\n        cells.forEach(cellData => {\n          if (cellData.name === cell) {\n            cellVerification = true;\n          } else {\n            cellVerification = false;\n          }\n        });\n\n        if (!cellVerification) {\n          this.setState({\n            isWrongCell: true\n          });\n        } else {\n          this.setState({\n            isWrongCell: false\n          });\n        }\n\n        if (!dateVerification) {\n          this.setState({\n            isWrongDate: true\n          });\n        } else {\n          this.setState({\n            isWrongDate: false\n          });\n        }\n      });\n    };\n\n    this.handleClickBg = e => {\n      const cancelModal = this.props.cancelModal;\n      console.log(e.currentTarget);\n      cancelModal();\n    };\n\n    const _props$memberInfo = props.memberInfo,\n          _id2 = _props$memberInfo._id,\n          _cell = _props$memberInfo.cell,\n          _date = _props$memberInfo.enrolledIn,\n          _nickName = _props$memberInfo.nickName;\n\n    const _enrolledIn = this.renderDate(_date);\n\n    this.state = {\n      nickName: _nickName,\n      cell: _cell,\n      enrolledIn: _enrolledIn,\n      _id: _id2,\n      isWrongCell: false,\n      isWrongDate: false,\n      cells: props.cells\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"keypress\", this.handleKeypress);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keypress\", this.handleKeypress);\n  }\n\n  render() {\n    const _this$state3 = this.state,\n          nickName = _this$state3.nickName,\n          enrolledIn = _this$state3.enrolledIn,\n          cell = _this$state3.cell,\n          isWrongCell = _this$state3.isWrongCell,\n          isWrongDate = _this$state3.isWrongDate;\n    return React.createElement(\"div\", {\n      className: \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onClick: this.handleClickBg,\n      className: \"background\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onClick: this.handleClickCancel,\n      className: \"cancel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"key\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"\\uB2C9\\uB124\\uC784\"), React.createElement(\"input\", {\n      name: \"nickName\",\n      onChange: this.handleChange,\n      value: nickName,\n      className: \"value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"key\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"\\uC18C\\uC18D\"), React.createElement(\"input\", {\n      name: \"cell\",\n      onChange: this.handleChange,\n      value: cell,\n      className: isWrongCell ? \"wrong\" : \"value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"key\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"\\uC785\\uC0AC\\uC77C\"), React.createElement(\"input\", {\n      name: \"enrolledIn\",\n      onChange: this.handleChange,\n      value: enrolledIn,\n      className: isWrongDate ? \"wrong\" : \"value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"button-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleClickConfirm,\n      className: \"change\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"\\uD655\\uC778\"), React.createElement(\"button\", {\n      onClick: this.handleClickDelete,\n      className: \"delete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"\\uC0AD\\uC81C\")))));\n  }\n\n}\n\nexport default Modal;","map":{"version":3,"sources":["/Users/yungchoyou/Desktop/group_meal_front/secode/group_meal_front/src/Pages/EmployeeTable/Modal.js"],"names":["React","Component","Modal","constructor","props","renderDate","datetime","fullDate","Date","year","getFullYear","month","getMonth","date","getDate","handleKeypress","e","keyCode","handleClickConfirm","state","_id","nickName","cell","enrolledIn","isWrongCell","isWrongDate","data","JSON","stringify","fetch","method","headers","Accept","body","then","res","json","window","location","reload","handleClickDelete","response","console","log","handleClickCancel","cancelModal","handleChange","key","target","name","value","setState","cells","cellVerification","dateVerification","toDateString","forEach","cellData","handleClickBg","currentTarget","memberInfo","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nclass Modal extends Component {\n  constructor(props) {\n    super();\n    const { _id, cell, enrolledIn: date, nickName } = props.memberInfo;\n    const enrolledIn = this.renderDate(date);\n\n    this.state = {\n      nickName,\n      cell,\n      enrolledIn,\n      _id,\n      isWrongCell: false,\n      isWrongDate: false,\n      cells: props.cells\n    };\n  }\n\n  renderDate = datetime => {\n    const fullDate = new Date(datetime);\n    const year = fullDate.getFullYear();\n    const month =\n      fullDate.getMonth() + 1 < 10\n        ? \"0\" + (fullDate.getMonth() + 1)\n        : fullDate.getMonth() + 1;\n    const date =\n      fullDate.getDate() < 10 ? \"0\" + fullDate.getDate() : fullDate.getDate();\n\n    return `${year}.${month}.${date}`;\n  };\n\n  handleKeypress = e => {\n    e.keyCode === 13 && this.handleClickConfirm();\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"keypress\", this.handleKeypress);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keypress\", this.handleKeypress);\n  }\n\n  handleClickConfirm = () => {\n    const {\n      _id,\n      nickName,\n      cell,\n      enrolledIn: datetime,\n      isWrongCell,\n      isWrongDate\n    } = this.state;\n\n    const enrolledIn = new Date(datetime);\n\n    const data = JSON.stringify({ nickName, cell, enrolledIn });\n\n    fetch(`http://localhost:3030/member/${_id}`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: data\n    }).then(res => res.json());\n    isWrongCell === false && isWrongDate === false && window.location.reload();\n  };\n\n  handleClickDelete = async () => {\n    const { _id } = this.state;\n\n    const response = await fetch(`http://localhost:3030/member/${_id}`, {\n      method: \"DELETE\"\n    }).then(res => res.json());\n\n    console.log(response);\n  };\n\n  handleClickCancel = () => {\n    const { cancelModal } = this.props;\n\n    cancelModal();\n  };\n\n  handleChange = e => {\n    const key = e.target.name;\n    const value = e.target.value;\n    this.setState({ [key]: value }, () => {\n      const { cell, enrolledIn: datetime, cells } = this.state;\n      const enrolledIn = new Date(datetime);\n\n      let cellVerification = false;\n      let dateVerification = false;\n\n      if (enrolledIn.toDateString() !== \"Invalid Date\") {\n        dateVerification = true;\n      } else {\n        dateVerification = false;\n      }\n\n      cells.forEach(cellData => {\n        if (cellData.name === cell) {\n          cellVerification = true;\n        } else {\n          cellVerification = false;\n        }\n      });\n\n      if (!cellVerification) {\n        this.setState({ isWrongCell: true });\n      } else {\n        this.setState({ isWrongCell: false });\n      }\n\n      if (!dateVerification) {\n        this.setState({ isWrongDate: true });\n      } else {\n        this.setState({ isWrongDate: false });\n      }\n    });\n  };\n\n  handleClickBg = e => {\n    const { cancelModal } = this.props;\n    console.log(e.currentTarget);\n\n    cancelModal();\n  };\n\n  render() {\n    const { nickName, enrolledIn, cell, isWrongCell, isWrongDate } = this.state;\n\n    return (\n      <div className=\"modal\">\n        <div onClick={this.handleClickBg} className=\"background\">\n          <div className=\"card\">\n            <span onClick={this.handleClickCancel} className=\"cancel\"></span>\n            <div className=\"row\">\n              <div className=\"key\">닉네임</div>\n              <input\n                name=\"nickName\"\n                onChange={this.handleChange}\n                value={nickName}\n                className=\"value\"\n              />\n            </div>\n            <div className=\"row\">\n              <div className=\"key\">소속</div>\n              <input\n                name=\"cell\"\n                onChange={this.handleChange}\n                value={cell}\n                className={isWrongCell ? \"wrong\" : \"value\"}\n              />\n            </div>\n            <div className=\"row\">\n              <div className=\"key\">입사일</div>\n              <input\n                name=\"enrolledIn\"\n                onChange={this.handleChange}\n                value={enrolledIn}\n                className={isWrongDate ? \"wrong\" : \"value\"}\n              />\n            </div>\n            <div className=\"button-wrapper\">\n              <button onClick={this.handleClickConfirm} className=\"change\">\n                확인\n              </button>\n              <button onClick={this.handleClickDelete} className=\"delete\">\n                삭제\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}