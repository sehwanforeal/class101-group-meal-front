{"ast":null,"code":"var _jsxFileName = \"/Users/yungchoyou/Desktop/group_meal_front/secode/group_meal_front/src/Pages/EmployeeTable/Modal.js\";\nimport React, { Component } from \"react\";\nimport ModalTemplate from \"../../Components/ModalTemplate/ModalTemplate\";\n\nclass Modal extends Component {\n  constructor(props) {\n    super();\n\n    this.renderDate = datetime => {\n      const fullDate = new Date(datetime);\n      const year = fullDate.getFullYear();\n      const month = fullDate.getMonth() + 1 < 10 ? \"0\" + (fullDate.getMonth() + 1) : fullDate.getMonth() + 1;\n      const date = fullDate.getDate() < 10 ? \"0\" + fullDate.getDate() : fullDate.getDate();\n      return \"\".concat(year, \".\").concat(month, \".\").concat(date);\n    };\n\n    this.handleKeypress = e => {\n      e.keyCode === 13 && this.handleClickConfirm();\n    };\n\n    this.handleClickConfirm = () => {\n      const _this$state = this.state,\n            _id = _this$state._id,\n            nickName = _this$state.nickName,\n            cell = _this$state.cell,\n            datetime = _this$state.enrolledIn,\n            isWrongCell = _this$state.isWrongCell,\n            isWrongDate = _this$state.isWrongDate;\n      const enrolledIn = new Date(datetime);\n      const data = JSON.stringify({\n        nickName,\n        cell,\n        enrolledIn\n      });\n      fetch(\"http://localhost:3030/member/\".concat(_id), {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: data\n      }).then(res => res.json());\n      isWrongCell === false && isWrongDate === false && window.location.reload();\n    };\n\n    this.handleClickDelete = async () => {\n      const _id = this.state._id;\n      const response = await fetch(\"http://localhost:3030/member/\".concat(_id), {\n        method: \"DELETE\"\n      }).then(res => res.json());\n      console.log(response);\n    };\n\n    this.handleChange = e => {\n      const key = e.target.name;\n      const value = e.target.value;\n      this.setState({\n        [key]: value\n      }, () => {\n        const _this$state2 = this.state,\n              cell = _this$state2.cell,\n              datetime = _this$state2.enrolledIn,\n              cells = _this$state2.cells;\n        const enrolledIn = new Date(datetime);\n        let cellVerification = false;\n        let dateVerification = false;\n\n        if (enrolledIn.toDateString() !== \"Invalid Date\") {\n          dateVerification = true;\n        } else {\n          dateVerification = false;\n        }\n\n        cells.forEach(cellData => {\n          if (cellData.name === cell) {\n            cellVerification = true;\n          } else {\n            cellVerification = false;\n          }\n        });\n\n        if (!cellVerification) {\n          this.setState({\n            isWrongCell: true\n          });\n        } else {\n          this.setState({\n            isWrongCell: false\n          });\n        }\n\n        if (!dateVerification) {\n          this.setState({\n            isWrongDate: true\n          });\n        } else {\n          this.setState({\n            isWrongDate: false\n          });\n        }\n      });\n    };\n\n    this.renderContents = () => {\n      const _this$state3 = this.state,\n            nickName = _this$state3.nickName,\n            enrolledIn = _this$state3.enrolledIn,\n            cell = _this$state3.cell,\n            isWrongCell = _this$state3.isWrongCell,\n            isWrongDate = _this$state3.isWrongDate;\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"key\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"\\uB2C9\\uB124\\uC784\"), React.createElement(\"input\", {\n        name: \"nickName\",\n        onChange: this.handleChange,\n        value: nickName,\n        className: \"value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"key\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"\\uC18C\\uC18D\"), React.createElement(\"input\", {\n        name: \"cell\",\n        onChange: this.handleChange,\n        value: cell,\n        className: isWrongCell ? \"wrong\" : \"value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"key\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"\\uC785\\uC0AC\\uC77C\"), React.createElement(\"input\", {\n        name: \"enrolledIn\",\n        onChange: this.handleChange,\n        value: enrolledIn,\n        className: isWrongDate ? \"wrong\" : \"value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"button-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.handleClickConfirm,\n        className: \"change\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"\\uD655\\uC778\"), React.createElement(\"button\", {\n        onClick: this.handleClickDelete,\n        className: \"delete\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"\\uC0AD\\uC81C\")));\n    };\n\n    const _props$memberInfo = props.memberInfo,\n          _id2 = _props$memberInfo._id,\n          _cell = _props$memberInfo.cell,\n          _date = _props$memberInfo.enrolledIn,\n          _nickName = _props$memberInfo.nickName;\n\n    const _enrolledIn = this.renderDate(_date);\n\n    this.card = React.createRef();\n    this.state = {\n      nickName: _nickName,\n      cell: _cell,\n      enrolledIn: _enrolledIn,\n      _id: _id2,\n      isWrongCell: false,\n      isWrongDate: false,\n      cells: props.cells\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"keypress\", this.handleKeypress);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keypress\", this.handleKeypress);\n  }\n\n  render() {\n    return React.createElement(ModalTemplate, {\n      contents: this.renderContents(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Modal;","map":{"version":3,"sources":["/Users/yungchoyou/Desktop/group_meal_front/secode/group_meal_front/src/Pages/EmployeeTable/Modal.js"],"names":["React","Component","ModalTemplate","Modal","constructor","props","renderDate","datetime","fullDate","Date","year","getFullYear","month","getMonth","date","getDate","handleKeypress","e","keyCode","handleClickConfirm","state","_id","nickName","cell","enrolledIn","isWrongCell","isWrongDate","data","JSON","stringify","fetch","method","headers","Accept","body","then","res","json","window","location","reload","handleClickDelete","response","console","log","handleChange","key","target","name","value","setState","cells","cellVerification","dateVerification","toDateString","forEach","cellData","renderContents","memberInfo","card","createRef","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ModalTemplate from \"../../Components/ModalTemplate/ModalTemplate\";\n\nclass Modal extends Component {\n  constructor(props) {\n    super();\n    const { _id, cell, enrolledIn: date, nickName } = props.memberInfo;\n    const enrolledIn = this.renderDate(date);\n    this.card = React.createRef();\n\n    this.state = {\n      nickName,\n      cell,\n      enrolledIn,\n      _id,\n      isWrongCell: false,\n      isWrongDate: false,\n      cells: props.cells\n    };\n  }\n\n  renderDate = datetime => {\n    const fullDate = new Date(datetime);\n    const year = fullDate.getFullYear();\n    const month =\n      fullDate.getMonth() + 1 < 10\n        ? \"0\" + (fullDate.getMonth() + 1)\n        : fullDate.getMonth() + 1;\n    const date =\n      fullDate.getDate() < 10 ? \"0\" + fullDate.getDate() : fullDate.getDate();\n\n    return `${year}.${month}.${date}`;\n  };\n\n  handleKeypress = e => {\n    e.keyCode === 13 && this.handleClickConfirm();\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"keypress\", this.handleKeypress);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keypress\", this.handleKeypress);\n  }\n\n  handleClickConfirm = () => {\n    const {\n      _id,\n      nickName,\n      cell,\n      enrolledIn: datetime,\n      isWrongCell,\n      isWrongDate\n    } = this.state;\n\n    const enrolledIn = new Date(datetime);\n\n    const data = JSON.stringify({ nickName, cell, enrolledIn });\n\n    fetch(`http://localhost:3030/member/${_id}`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: data\n    }).then(res => res.json());\n    isWrongCell === false && isWrongDate === false && window.location.reload();\n  };\n\n  handleClickDelete = async () => {\n    const { _id } = this.state;\n\n    const response = await fetch(`http://localhost:3030/member/${_id}`, {\n      method: \"DELETE\"\n    }).then(res => res.json());\n\n    console.log(response);\n  };\n\n  handleChange = e => {\n    const key = e.target.name;\n    const value = e.target.value;\n    this.setState({ [key]: value }, () => {\n      const { cell, enrolledIn: datetime, cells } = this.state;\n      const enrolledIn = new Date(datetime);\n\n      let cellVerification = false;\n      let dateVerification = false;\n\n      if (enrolledIn.toDateString() !== \"Invalid Date\") {\n        dateVerification = true;\n      } else {\n        dateVerification = false;\n      }\n\n      cells.forEach(cellData => {\n        if (cellData.name === cell) {\n          cellVerification = true;\n        } else {\n          cellVerification = false;\n        }\n      });\n\n      if (!cellVerification) {\n        this.setState({ isWrongCell: true });\n      } else {\n        this.setState({ isWrongCell: false });\n      }\n\n      if (!dateVerification) {\n        this.setState({ isWrongDate: true });\n      } else {\n        this.setState({ isWrongDate: false });\n      }\n    });\n  };\n\n  renderContents = () => {\n    const { nickName, enrolledIn, cell, isWrongCell, isWrongDate } = this.state;\n\n    return (\n      <>\n        <div className=\"row\">\n          <div className=\"key\">닉네임</div>\n          <input\n            name=\"nickName\"\n            onChange={this.handleChange}\n            value={nickName}\n            className=\"value\"\n          />\n        </div>\n        <div className=\"row\">\n          <div className=\"key\">소속</div>\n          <input\n            name=\"cell\"\n            onChange={this.handleChange}\n            value={cell}\n            className={isWrongCell ? \"wrong\" : \"value\"}\n          />\n        </div>\n        <div className=\"row\">\n          <div className=\"key\">입사일</div>\n          <input\n            name=\"enrolledIn\"\n            onChange={this.handleChange}\n            value={enrolledIn}\n            className={isWrongDate ? \"wrong\" : \"value\"}\n          />\n        </div>\n        <div className=\"button-wrapper\">\n          <button onClick={this.handleClickConfirm} className=\"change\">\n            확인\n          </button>\n          <button onClick={this.handleClickDelete} className=\"delete\">\n            삭제\n          </button>\n        </div>\n      </>\n    );\n  };\n\n  render() {\n    return <ModalTemplate contents={this.renderContents()} />;\n  }\n}\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}