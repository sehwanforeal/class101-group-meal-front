{"ast":null,"code":"var _jsxFileName = \"/Users/yungchoyou/Desktop/group_meal_front/secode/group_meal_front/src/Pages/EmployeeTable/Employeetable.js\";\nimport React, { Component } from \"react\";\nimport \"./Employeetable.scss\";\nimport Nav from \"Components/Nav\";\nimport Tables from \"./Tables\";\nimport Modal from \"./Modal\";\nimport Tools from \"./Tools\";\nimport config from \"config.js\";\nimport { create } from \"domain\";\n\nclass EmployeeTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      members: [],\n      memberInfo: {},\n      cells: [],\n      isModalOn: false,\n      createMember: false,\n      name: \"\",\n      cell: \"\",\n      enrolledIn: \"\"\n    };\n\n    this.fetchMembers = async () => {\n      const members = this.state.members;\n      const list = await fetch(\"\".concat(config.url, \"member\")).then(res => res.json());\n      this.setState({\n        members: members.concat(list)\n      });\n    };\n\n    this.fetchCells = async () => {\n      const url = config.url + \"cell\";\n      const cells = await fetch(url).then(res => res.json());\n      this.setState({\n        cells\n      });\n    };\n\n    this.handleClick = async name => {\n      const memberData = await fetch(\"\".concat(config.url, \"member/\").concat(name)).then(res => res.json());\n      const cellData = await fetch(\"\".concat(config.url, \"cell\")).then(res => res.json());\n      this.setState({\n        memberInfo: memberData.member,\n        cells: cellData,\n        isModalOn: true\n      });\n    };\n\n    this.cancelModal = () => {\n      this.setState({\n        isModalOn: false,\n        createMember: false\n      });\n    };\n\n    this.createMember = () => {\n      this.setState({\n        createMember: true\n      });\n    };\n\n    this.handleChange = e => {\n      const key = e.target.name;\n      const value = e.target.value;\n      this.setState({\n        [key]: value\n      });\n    };\n\n    this.handleConfirm = async () => {\n      const inputVal = this.state.inputVal;\n      const url = config.url + \"member\";\n      const data = JSON.stringify({\n        name: inputVal\n      });\n      const response = await fetch(url, {\n        method: \"POST\",\n        body: data\n      }).then(res => res.json());\n      console.log(response);\n    };\n  }\n\n  componentDidMount() {\n    this.fetchMembers();\n    this.fetchCells();\n  }\n\n  render() {\n    const _this$state = this.state,\n          members = _this$state.members,\n          memberInfo = _this$state.memberInfo,\n          isModalOn = _this$state.isModalOn,\n          cells = _this$state.cells,\n          createMember = _this$state.createMember,\n          name = _this$state.name,\n          enrolledIn = _this$state.enrolledIn;\n    return React.createElement(React.Fragment, null, isModalOn && React.createElement(Modal, {\n      cells: cells,\n      cancelModal: this.cancelModal,\n      memberInfo: memberInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), createMember && React.createElement(Tools, {\n      cells: cells,\n      onChange: this.handleChange,\n      name: name,\n      enrolledIn: enrolledIn,\n      cancelModal: this.cancelModal,\n      handleConfirm: this.handleConfirm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"\\uD074\\uB465\\uC774 \\uBAA9\\uB85D\")), React.createElement(\"div\", {\n      className: \"tools\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.createMember,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"\\uB274\\uBE44 \\uCD94\\uAC00\")), React.createElement(\"div\", {\n      className: \"tables\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Tables, {\n      onClick: this.handleClick,\n      listData: members,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default EmployeeTable;","map":{"version":3,"sources":["/Users/yungchoyou/Desktop/group_meal_front/secode/group_meal_front/src/Pages/EmployeeTable/Employeetable.js"],"names":["React","Component","Nav","Tables","Modal","Tools","config","create","EmployeeTable","state","members","memberInfo","cells","isModalOn","createMember","name","cell","enrolledIn","fetchMembers","list","fetch","url","then","res","json","setState","concat","fetchCells","handleClick","memberData","cellData","member","cancelModal","handleChange","e","key","target","value","handleConfirm","inputVal","data","JSON","stringify","response","method","body","console","log","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Employeetable.scss\";\nimport Nav from \"Components/Nav\";\nimport Tables from \"./Tables\";\nimport Modal from \"./Modal\";\nimport Tools from \"./Tools\";\nimport config from \"config.js\";\nimport { create } from \"domain\";\n\nclass EmployeeTable extends Component {\n  state = {\n    members: [],\n    memberInfo: {},\n    cells: [],\n    isModalOn: false,\n    createMember: false,\n    name: \"\",\n    cell: \"\",\n    enrolledIn: \"\"\n  };\n\n  componentDidMount() {\n    this.fetchMembers();\n    this.fetchCells();\n  }\n\n  fetchMembers = async () => {\n    const { members } = this.state;\n\n    const list = await fetch(`${config.url}member`).then(res => res.json());\n\n    this.setState({\n      members: members.concat(list)\n    });\n  };\n\n  fetchCells = async () => {\n    const url = config.url + \"cell\";\n\n    const cells = await fetch(url).then(res => res.json());\n\n    this.setState({ cells });\n  };\n\n  handleClick = async name => {\n    const memberData = await fetch(`${config.url}member/${name}`).then(res =>\n      res.json()\n    );\n\n    const cellData = await fetch(`${config.url}cell`).then(res => res.json());\n\n    this.setState({\n      memberInfo: memberData.member,\n      cells: cellData,\n      isModalOn: true\n    });\n  };\n\n  cancelModal = () => {\n    this.setState({ isModalOn: false, createMember: false });\n  };\n\n  createMember = () => {\n    this.setState({ createMember: true });\n  };\n\n  handleChange = e => {\n    const key = e.target.name;\n    const value = e.target.value;\n\n    this.setState({ [key]: value });\n  };\n\n  handleConfirm = async () => {\n    const { inputVal } = this.state;\n    const url = config.url + \"member\";\n    const data = JSON.stringify({\n      name: inputVal\n    });\n\n    const response = await fetch(url, {\n      method: \"POST\",\n      body: data\n    }).then(res => res.json());\n\n    console.log(response);\n  };\n\n  render() {\n    const {\n      members,\n      memberInfo,\n      isModalOn,\n      cells,\n      createMember,\n      name,\n      enrolledIn\n    } = this.state;\n\n    return (\n      <>\n        {isModalOn && (\n          <Modal\n            cells={cells}\n            cancelModal={this.cancelModal}\n            memberInfo={memberInfo}\n          />\n        )}\n        {createMember && (\n          <Tools\n            cells={cells}\n            onChange={this.handleChange}\n            name={name}\n            enrolledIn={enrolledIn}\n            cancelModal={this.cancelModal}\n            handleConfirm={this.handleConfirm}\n          />\n        )}\n        <Nav />\n        <div className=\"page\">\n          <main>\n            <div className=\"title\">\n              <span>클둥이 목록</span>\n            </div>\n            <div className=\"tools\">\n              <button onClick={this.createMember}>뉴비 추가</button>\n            </div>\n            <div className=\"tables\">\n              <Tables onClick={this.handleClick} listData={members} />\n            </div>\n          </main>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default EmployeeTable;\n"]},"metadata":{},"sourceType":"module"}