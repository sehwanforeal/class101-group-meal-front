{"ast":null,"code":"var _jsxFileName = \"/Users/yungchoyou/Desktop/group_meal_front/secode/group_meal_front/src/Pages/EmployeeTable/Modal.js\";\nimport React, { Component } from \"react\";\nimport { renderDate } from \"utils\";\nimport { url } from \"config\";\n\nclass Modal extends Component {\n  constructor(props) {\n    super();\n\n    this.handleKeypress = e => {\n      e.keyCode === 13 && this.handleClickConfirm();\n    };\n\n    this.handleClickConfirm = () => {\n      const _this$state = this.state,\n            _id = _this$state._id,\n            nickName = _this$state.nickName,\n            cell = _this$state.cell,\n            datetime = _this$state.enrolledIn,\n            isWrongCell = _this$state.isWrongCell,\n            isWrongDate = _this$state.isWrongDate;\n      const enrolledIn = new Date(datetime);\n      const data = JSON.stringify({\n        nickName,\n        cell,\n        enrolledIn\n      });\n      const access_token = sessionStorage.getItem(\"access_token\");\n      fetch(\"\".concat(url, \"member/\").concat(_id), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: access_token\n        },\n        body: data\n      }).then(res => res.json()).then(res => {\n        console.log(res);\n\n        if (res.message === \"success\") {\n          window.location.reload();\n        }\n      });\n    };\n\n    this.handleClickDelete = () => {\n      const _id = this.state._id;\n      const access_token = sessionStorage.getItem(\"access_token\");\n      fetch(\"\".concat(url, \"member/\").concat(_id), {\n        method: \"DELETE\",\n        headers: {\n          authorization: access_token\n        }\n      }).then(res => window.location.reload());\n    };\n\n    this.handleClickCancel = () => {\n      const cancelModal = this.props.cancelModal;\n      cancelModal();\n    };\n\n    this.handleChange = e => {\n      const key = e.target.name;\n      const value = e.target.value;\n      this.setState({\n        [key]: value\n      }, () => {\n        const _this$state2 = this.state,\n              cell = _this$state2.cell,\n              datetime = _this$state2.enrolledIn,\n              cells = _this$state2.cells;\n        const enrolledIn = new Date(datetime);\n        let cellVerification = false;\n        let dateVerification = false;\n\n        if (enrolledIn.toDateString() !== \"Invalid Date\") {\n          dateVerification = true;\n        } else {\n          dateVerification = false;\n        }\n\n        cells.forEach(cellData => {\n          if (cellData.name === cell) {\n            cellVerification = true;\n          }\n        });\n\n        if (!cellVerification) {\n          this.setState({\n            isWrongCell: true\n          });\n        } else {\n          this.setState({\n            isWrongCell: false\n          });\n        }\n\n        if (!dateVerification) {\n          this.setState({\n            isWrongDate: true\n          });\n        } else {\n          this.setState({\n            isWrongDate: false\n          });\n        }\n      });\n    };\n\n    this.handleClickBg = e => {\n      const cancelModal = this.props.cancelModal;\n      e.target.contains(this.card.current) && cancelModal();\n    };\n\n    const _props$memberInfo = props.memberInfo,\n          _id2 = _props$memberInfo._id,\n          _cell = _props$memberInfo.cell,\n          date = _props$memberInfo.enrolledIn,\n          _nickName = _props$memberInfo.nickName;\n\n    const _enrolledIn = renderDate(date);\n\n    this.state = {\n      nickName: _nickName,\n      cell: _cell.name,\n      enrolledIn: _enrolledIn,\n      _id: _id2,\n      isWrongCell: false,\n      isWrongDate: false,\n      cells: props.cells\n    };\n    this.card = React.createRef();\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"keypress\", this.handleKeypress);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keypress\", this.handleKeypress);\n  }\n\n  render() {\n    const _this$state3 = this.state,\n          nickName = _this$state3.nickName,\n          enrolledIn = _this$state3.enrolledIn,\n          cell = _this$state3.cell,\n          isWrongCell = _this$state3.isWrongCell,\n          isWrongDate = _this$state3.isWrongDate;\n    return React.createElement(\"div\", {\n      className: \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onClick: this.handleClickBg,\n      className: \"background\",\n      ref: this.card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onClick: this.handleClickCancel,\n      className: \"cancel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"key\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"\\uB2C9\\uB124\\uC784\"), React.createElement(\"input\", {\n      name: \"nickName\",\n      onChange: this.handleChange,\n      value: nickName,\n      className: \"value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"key\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"\\uC18C\\uC18D\"), React.createElement(\"input\", {\n      name: \"cell\",\n      onChange: this.handleChange,\n      value: cell,\n      className: isWrongCell ? \"wrong\" : \"value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"key\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"\\uC785\\uC0AC\\uC77C\"), React.createElement(\"input\", {\n      name: \"enrolledIn\",\n      onChange: this.handleChange,\n      value: enrolledIn,\n      className: isWrongDate ? \"wrong\" : \"value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"button-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleClickConfirm,\n      className: \"change\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"\\uD655\\uC778\"), React.createElement(\"button\", {\n      onClick: this.handleClickDelete,\n      className: \"delete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"\\uC0AD\\uC81C\")))));\n  }\n\n}\n\nexport default Modal;","map":{"version":3,"sources":["/Users/yungchoyou/Desktop/group_meal_front/secode/group_meal_front/src/Pages/EmployeeTable/Modal.js"],"names":["React","Component","renderDate","url","Modal","constructor","props","handleKeypress","e","keyCode","handleClickConfirm","state","_id","nickName","cell","datetime","enrolledIn","isWrongCell","isWrongDate","Date","data","JSON","stringify","access_token","sessionStorage","getItem","fetch","method","headers","Authorization","body","then","res","json","console","log","message","window","location","reload","handleClickDelete","authorization","handleClickCancel","cancelModal","handleChange","key","target","name","value","setState","cells","cellVerification","dateVerification","toDateString","forEach","cellData","handleClickBg","contains","card","current","memberInfo","date","createRef","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { renderDate } from \"utils\";\nimport { url } from \"config\";\nclass Modal extends Component {\n  constructor(props) {\n    super();\n    const { _id, cell, enrolledIn: date, nickName } = props.memberInfo;\n    const enrolledIn = renderDate(date);\n\n    this.state = {\n      nickName,\n      cell: cell.name,\n      enrolledIn,\n      _id,\n      isWrongCell: false,\n      isWrongDate: false,\n      cells: props.cells\n    };\n\n    this.card = React.createRef();\n  }\n\n  handleKeypress = e => {\n    e.keyCode === 13 && this.handleClickConfirm();\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"keypress\", this.handleKeypress);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keypress\", this.handleKeypress);\n  }\n\n  handleClickConfirm = () => {\n    const {\n      _id,\n      nickName,\n      cell,\n      enrolledIn: datetime,\n      isWrongCell,\n      isWrongDate\n    } = this.state;\n\n    const enrolledIn = new Date(datetime);\n\n    const data = JSON.stringify({ nickName, cell, enrolledIn });\n\n    const access_token = sessionStorage.getItem(\"access_token\");\n\n    fetch(`${url}member/${_id}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: access_token\n      },\n      body: data\n    })\n      .then(res => res.json())\n      .then(res => {\n        console.log(res);\n        if (res.message === \"success\") {\n          window.location.reload();\n        }\n      });\n  };\n\n  handleClickDelete = () => {\n    const { _id } = this.state;\n\n    const access_token = sessionStorage.getItem(\"access_token\");\n\n    fetch(`${url}member/${_id}`, {\n      method: \"DELETE\",\n      headers: { authorization: access_token }\n    }).then(res => window.location.reload());\n  };\n\n  handleClickCancel = () => {\n    const { cancelModal } = this.props;\n\n    cancelModal();\n  };\n\n  handleChange = e => {\n    const key = e.target.name;\n    const value = e.target.value;\n    this.setState({ [key]: value }, () => {\n      const { cell, enrolledIn: datetime, cells } = this.state;\n      const enrolledIn = new Date(datetime);\n\n      let cellVerification = false;\n      let dateVerification = false;\n\n      if (enrolledIn.toDateString() !== \"Invalid Date\") {\n        dateVerification = true;\n      } else {\n        dateVerification = false;\n      }\n\n      cells.forEach(cellData => {\n        if (cellData.name === cell) {\n          cellVerification = true;\n        }\n      });\n\n      if (!cellVerification) {\n        this.setState({ isWrongCell: true });\n      } else {\n        this.setState({ isWrongCell: false });\n      }\n\n      if (!dateVerification) {\n        this.setState({ isWrongDate: true });\n      } else {\n        this.setState({ isWrongDate: false });\n      }\n    });\n  };\n\n  handleClickBg = e => {\n    const { cancelModal } = this.props;\n    e.target.contains(this.card.current) && cancelModal();\n  };\n\n  render() {\n    const { nickName, enrolledIn, cell, isWrongCell, isWrongDate } = this.state;\n\n    return (\n      <div className=\"modal\">\n        <div\n          onClick={this.handleClickBg}\n          className=\"background\"\n          ref={this.card}\n        >\n          <div className=\"card\">\n            <span onClick={this.handleClickCancel} className=\"cancel\"></span>\n            <div className=\"row\">\n              <div className=\"key\">닉네임</div>\n              <input\n                name=\"nickName\"\n                onChange={this.handleChange}\n                value={nickName}\n                className=\"value\"\n              />\n            </div>\n            <div className=\"row\">\n              <div className=\"key\">소속</div>\n              <input\n                name=\"cell\"\n                onChange={this.handleChange}\n                value={cell}\n                className={isWrongCell ? \"wrong\" : \"value\"}\n              />\n            </div>\n            <div className=\"row\">\n              <div className=\"key\">입사일</div>\n              <input\n                name=\"enrolledIn\"\n                onChange={this.handleChange}\n                value={enrolledIn}\n                className={isWrongDate ? \"wrong\" : \"value\"}\n              />\n            </div>\n            <div className=\"button-wrapper\">\n              <button onClick={this.handleClickConfirm} className=\"change\">\n                확인\n              </button>\n              <button onClick={this.handleClickDelete} className=\"delete\">\n                삭제\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}